menu "Smooth"

config SMOOTH_SOCKET_DISPATCHER_STACK_SIZE
    int "Socket Dispatcher stack size"
    range 16384 30720
    default 20480
    help
        Stack size for the Socket Dispatcher.

config SMOOTH_TIMER_SERVICE_STACK_SIZE
    int "Timer Service stack size"
    range 2048 4069
    default 3072
    help
        Stack size for the Timer Service.

config SMOOTH_MAX_MQTT_MESSAGE_SIZE
    int "Maximum size of incoming messages"
    range 128 4096
    default 512
    help
        MQTT allows messages sizes up to 268435455 bytes in its remaning lengths field which is obviously
	too much data to hold in memory on an embedded device. Any incoming message with a remaining length
	larger than the set value will be 'swallowed' by the Smooth MQTT protocol implementation and never
	seen by the application.

config SMOOTH_MAX_MQTT_OUTGOING_MESSAGES
    int "Maximum number of queued outgoing messages"
    range 5 50
    default 10
    help
        As there is a limited amount of heap memory available, the number of outgoing messages needs to be
        limited to prevent using up all memory, eventually resulting in a undefined behavior of the application.
        (Incoming messages are immediately passed to the application without any buffering so it is up to the
        application developer to handle that side.)

choice
    prompt "Choose loglevel for MQTT"
config SMOOTH_MQTT_LOG_LEVEL_NONE
    bool "None"
config SMOOTH_MQTT_LOG_LEVEL_ERROR
   bool "Error"
config SMOOTH_MQTT_LOG_LEVEL_WARN
   bool "Warning"
config SMOOTH_MQTT_LOG_LEVEL_INFO
   bool "Info"
config SMOOTH_MQTT_LOG_LEVEL_DEBUG
   bool "Debug"
config SMOOTH_MQTT_LOG_LEVEL_VERBOSE
    bool "Verbose"
endchoice

config SMOOTH_MQTT_LOGGING_LEVEL
    int
    default 0 if SMOOTH_MQTT_LOG_LEVEL_NONE
    default 1 if SMOOTH_MQTT_LOG_LEVEL_ERROR
    default 2 if SMOOTH_MQTT_LOG_LEVEL_WARN
    default 3 if SMOOTH_MQTT_LOG_LEVEL_INFO
    default 4 if SMOOTH_MQTT_LOG_LEVEL_DEBUG
    default 5 if SMOOTH_MQTT_LOG_LEVEL_VERBOSE
endmenu
